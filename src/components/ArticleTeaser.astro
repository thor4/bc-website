---
import TagPill from './TagPill.astro';

export interface Props {
  title: string;
  excerpt: string;
  readTime: string;
  publishDate: string;
  tags: string[];
  href: string;
  featured?: boolean;
  level?: 'beginner' | 'intermediate' | 'advanced';
  audience?: 'technical' | 'business' | 'both';
}

const { 
  title, 
  excerpt, 
  readTime, 
  publishDate, 
  tags, 
  href, 
  featured = false,
  level = 'intermediate',
  audience = 'both'
} = Astro.props;

const formatDate = (date: string) => {
  return new Date(date).toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
};

const levelColors = {
  beginner: 'success',
  intermediate: 'accent',
  advanced: 'warning'
} as const;

const audienceColors = {
  technical: 'accent',
  business: 'success',
  both: 'default'
} as const;
---

<article class={`group relative bg-[var(--color-bg-secondary)] border border-[var(--color-border)] rounded-lg p-6 hover:border-[var(--color-border-hover)] transition-all duration-200 hover:shadow-lg ${featured ? 'ring-1 ring-[var(--color-accent)]/20' : ''}`}>
  {featured && (
    <div class="absolute -top-2 left-4">
      <TagPill variant="accent" size="sm">Featured</TagPill>
    </div>
  )}
  
  <div class="flex flex-col h-full">
    <!-- Header -->
    <div class="flex items-start justify-between mb-3">
      <div class="flex items-center space-x-2 text-sm text-[var(--color-text-tertiary)]">
        <time datetime={publishDate}>{formatDate(publishDate)}</time>
        <span>â€¢</span>
        <span>{readTime}</span>
      </div>
      <div class="flex items-center space-x-2">
        <TagPill variant={levelColors[level]} size="sm">{level}</TagPill>
        <TagPill variant={audienceColors[audience]} size="sm">
          {audience === 'both' ? 'all audiences' : audience}
        </TagPill>
      </div>
    </div>

    <!-- Content -->
    <div class="flex-grow">
      <h3 class="text-xl font-semibold text-[var(--color-text-primary)] mb-3 group-hover:text-[var(--color-accent)] transition-colors duration-200">
        <a href={href} class="stretched-link">
          {title}
        </a>
      </h3>
      
      <p class="text-[var(--color-text-secondary)] leading-relaxed mb-4">
        {excerpt}
      </p>
    </div>

    <!-- Tags -->
    <div class="flex flex-wrap gap-2 mt-auto pt-4 border-t border-[var(--color-border)]">
      {tags.slice(0, 3).map((tag) => (
        <TagPill size="sm">{tag}</TagPill>
      ))}
      {tags.length > 3 && (
        <TagPill size="sm" variant="default">+{tags.length - 3} more</TagPill>
      )}
    </div>

    <!-- Read More Arrow -->
    <div class="absolute bottom-6 right-6 text-[var(--color-accent)] opacity-0 group-hover:opacity-100 transform translate-x-2 group-hover:translate-x-0 transition-all duration-200">
      <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
      </svg>
    </div>
  </div>
</article>

<style>
  .stretched-link::after {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: 1;
    content: "";
  }
</style>